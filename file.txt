
let liftCount = 0
let liftRow = document.createElement("div");
liftRow.className = "lift-container";
function generateLift(numOfLifts){
    for(let i = 0; i<numOfLifts; i++){
        const element = document.createElement("div")
        liftCount++;
        element.classname = "lift"
        liftRow.appendChild(element);
        element.style.left = `${liftCount*100}px`
    }
}
generateLift(numLifts)


1.Each floor container div needs buttons Top and Bottom
2.UI of lift and floor should look good
    -> Floor = Color
    -> Lift = Doors + Color
3.Animation to move the lift 
    -> When top button is called 
        const top{'click', ()=>{
            move the lift multiplying by px of floors size and distance between them
        } }
    -> When bottom button is called 
        const bottom{'click', ()=>{
            move the lift multiplying by px of floors size and distance between them
        } }

We have to move some random div(lift) to specific div(Floor1).



function createFloorsAndLifts() {
    let floorCounts = localStorage.getItem("numberOfFloors");
    let liftCounts = localStorage.getItem("numberOfLifts");
  
    for (let floor = floorCounts; floor > 0; floor--) {
      let floorContainer = document.createElement("div");
      floorContainer.classList.add("floor-container");
      floorContainer.setAttribute("id", `floor-${floor}`);
  
      let floorController = document.createElement("div");
      floorController.classList.add("floor-controller");
      floorContainer.appendChild(floorController);
  
      let floorNumber = document.createElement("div");
      floorNumber.classList.add("floor-number");
      floorNumber.innerText = `Floor ${floor}`;
  
      let floorButton = document.createElement("div");
      floorButton.classList.add("floor-button");
      floorButton.setAttribute("id", `floor-button-${floor}`);
  
      let floorButtonUp = document.createElement("button");
      floorButtonUp.classList.add("button-up");
      floorButtonUp.setAttribute("id", `button-up-${floor}`);
      let buttonUpIcon = document.createElement("i");
      buttonUpIcon.classList.add("fas", "fa-arrow-up");
      floorButtonUp.addEventListener("click", () => {
        for (let lift of lifts) {
          if (!lift.busy) {
            moveLift(lift, floor);
            break;
          }
        }
      });
      floorButtonUp.appendChild(buttonUpIcon);

      let floorButtonDown = document.createElement("button");
      floorButtonDown.classList.add("button-down");
      floorButtonDown.setAttribute("id", `button-down-${floor}`);
      let buttonDownIcon = document.createElement("i");
      buttonDownIcon.classList.add("fas", "fa-arrow-down");
      floorButtonDown.addEventListener("click", () => {
        for (let lift of lifts) {
          if (!lift.busy) {
            moveLift(lift, floor);
            break;
          }
        }
      });
      floorButtonDown.appendChild(buttonDownIcon);

      

      let liftsContainer = document.createElement("div");
      liftsContainer.classList.add("lifts");
    
      for (let lift = 0; lift < liftCounts; lift++) {
        let liftContainer = document.createElement("div");
        liftContainer.classList.add("lift");
        liftContainer.setAttribute("id", `lift-${lift + 1}`);
    
        let leftDoor = document.createElement("div");
        leftDoor.classList.add("left-door");
    
        let rightDoor = document.createElement("div");
        rightDoor.classList.add("right-door");
    
        liftContainer.appendChild(leftDoor);
        liftContainer.appendChild(rightDoor);
    
        liftsContainer.appendChild(liftContainer);
        lifts.push(new Lift(lift + 1));
      }
      firstFloor.appendChild(liftsContainer);
    }
    
    createFloorsAndLifts();