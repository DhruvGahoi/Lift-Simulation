If I had to move a lift up but at the same time a user calls it down 
so lift must contains some property until it is free .
After reaching the desired floor its status should be updated 
and now it have to move to another called place.

// logic for storing values
/**
 *  busy attribute on lift
lift.busy = false;
 * get attribute to check if lift is busy
 * 
 * on calling htis function have a for loop .lift
 * get all the lift by this class
 * .querySelectorAll(.lifts)
 * for(loop) -> with these lifts
 * check if lift has the attribute
 * 
 * if lift doesn't have the attriubte move the lift after adding busy attribute 
 * if lift has the attribute: check for other one
 * keep checking until the all the lifts are done to be checked ( for loop ending basic)
 *  maintain a array of targetFloors
 * if no lifts are found push to that array
 * once a lift reaches a floor check for this array and if there is anything in the array move the lift to that floor
 * 
 */



 // function useLift(targetFloor) {
//   const elevators = document.querySelectorAll(".elevator")
//   let pos;
//   for(let i = 0; i < elevators.length; i++) {
//       if(elevators[i].classList.contains("busy")) {
//           if(elevators[i].getAttribute("onfloor") === targetFloor) {
//               return;
//           }
//           console.log("check next")
//       } else {
//           for(let i = 0; i < elevators.length; i++) {
//               if(elevators[i].getAttribute("onfloor") === targetFloor) {
//                   move(targetFloor,i)
//                   return
//               }
//           }
//           pos = i
//           move(targetFloor, pos)
//           break;
//       }
//   }
//   if(pos === undefined) {
//       targetFloors.push(targetFloor)
//   }
// }
